/**
 * EntityGroup contains entities of same type. In principle, EntityGroup is
 * nothing more than an allocation table; it just specifies list of components
 * and the offset of each component.
 */
export class EntityGroup {
  size: number = 0;

  maxSize: number = 0;

  /**
   * Offset of each component. If the component is not present in EntityGroup,
   * '-1' is specified.
   */
  offsets: number[] = [];

  // TODO: Should this be a bitset? or a hash code to just filter out items?
  hashCode: number = 0;

  updateHashCode(): void {
    let result = 7;
    let windPos = 0;
    for (let i = 0; i < this.offsets.length; i += 1) {
      if (this.offsets[i] !== -1) {
        for (let j = windPos; j < i; j += 1) {
          result = result * 31 | 0;
        }
        windPos = i;
        result = result * 31 + 1 | 0;
      }
    }
    this.hashCode = result;
  }

  // EntityGroup don't do anything more than this... for now. Utility functions
  // will be provided using 'EntityGroupHandle', which is generated by
  // the engine (EntityStore)
}
